class Solution {
public:
    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {
     vector<vector<int>> adj(n+1);
    
    if(n==1)
    return true;
     for(int i = 0; i < edges.size(); ++i) {
          int u = edges[i][0];
            int v = edges[i][1];
            adj[u].push_back(v);
            adj[v].push_back(u);
     }

    
     vector<bool> visited(n+1,0);  

     queue<int> q;
     q.push(source);
     visited[source] = true;
     while(!q.empty()) {
         int st = q.front();
         q.pop();

         for(auto it : adj[st]) {
             if(it == destination) {
                 cout<<it<<" "<<st<<endl;
                 return true;
             }
             
             else {
                 if(visited[it] == false)
                 q.push(it);
                 visited[it] = true;
             }
             
         }
     }
     return false;
    }
};
